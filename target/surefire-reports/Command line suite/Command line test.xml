<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="6" hostname="DESKTOP-0F0OE94" failures="2" tests="11" name="Command line test" time="0.418" errors="0" timestamp="2022-08-14T18:31:24 ICT">
  <testcase classname="tests.BaseTest" name="@BeforeTest initAppiumSession" time="-1.660476684083E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;udid&amp;apos; is required by BeforeTest on method initAppiumSession but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'udid' is required by BeforeTest on method initAppiumSession but has not been marked @Optional or defined

... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest initAppiumSession -->
  <testcase classname="tests.testng.BaseTestNG" name="@BeforeTest beforeTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="tests.testng.TestNGHooks01" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="tests.testng.TestNGHooks01" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="tests.testng.TestNGHooks01" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="tests.testng.TestNGHooks02" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="tests.testng.TestNGHooks02" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="tests.testng.TestNGHooks02" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="tests.testng.TestNGHooks02" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="tests.testng.TestNGHooks02" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="tests.testng.TestNGHooks02" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="tests.testng.TestNGHooks02" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="tests.BaseTest" name="@AfterTest quitAppiumSession" time="0.001">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;java.lang.ThreadLocal.get()&amp;quot; because &amp;quot;tests.BaseTest.driverThread&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "java.lang.ThreadLocal.get()" because "tests.BaseTest.driverThread" is null
at tests.BaseTest.quitAppiumSession(BaseTest.java:48)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- @AfterTest quitAppiumSession -->
  <testcase classname="tests.authen.LoginTestWithBaseTest" name="testLogin" time="0.0">
    <skipped/>
  </testcase> <!-- testLogin -->
  <testcase classname="tests.authen.LoginTestWithBaseTest" name="testLogin" time="0.0">
    <skipped/>
  </testcase> <!-- testLogin -->
  <testcase classname="tests.authen.LoginTestWithBaseTest" name="testLogin" time="0.0">
    <skipped/>
  </testcase> <!-- testLogin -->
  <testcase classname="tests.form.FormTest" name="testFormFlow" time="0.001">
    <skipped/>
  </testcase> <!-- testFormFlow -->
  <testcase classname="tests.testng.TestNGHooks01" name="test01" time="0.001">
    <skipped/>
  </testcase> <!-- test01 -->
  <testcase classname="tests.testng.TestNGHooks01" name="test02" time="0.0">
    <skipped/>
  </testcase> <!-- test02 -->
  <testcase classname="tests.testng.TestNGHooks02" name="test01" time="0.0">
    <skipped/>
  </testcase> <!-- test01 -->
  <testcase classname="tests.testng.TestNGHooks02" name="test02" time="0.0">
    <skipped/>
  </testcase> <!-- test02 -->
  <testcase classname="tests.testng.TestNGHooks02" name="test03" time="0.0">
    <skipped/>
  </testcase> <!-- test03 -->
  <testcase classname="tests.testng.TestParameter" name="testParameter" time="0.0">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;uuid&amp;apos; is required by @Test on method testParameter but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'uuid' is required by @Test on method testParameter but has not been marked @Optional or defined

at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testParameter -->
  <testcase classname="tests.testng.TestParameter2" name="testParameter" time="0.0">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;uuid&amp;apos; is required by @Test on method testParameter but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'uuid' is required by @Test on method testParameter but has not been marked @Optional or defined

at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testParameter -->
  <testcase classname="tests.BaseTest" name="@BeforeTest initAppiumSession" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest initAppiumSession -->
  <testcase classname="tests.testng.BaseTestNG" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="tests.BaseTest" name="@AfterTest quitAppiumSession" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest quitAppiumSession -->
  <testcase classname="tests.BaseTest" name="@AfterTest quitAppiumSession" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest quitAppiumSession -->
  <testcase classname="tests.testng.BaseTestNG" name="@BeforeSuite beforeSuit" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuit -->
  <testcase classname="tests.BaseTest" name="@BeforeTest initAppiumSession" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest initAppiumSession -->
</testsuite> <!-- Command line test -->
